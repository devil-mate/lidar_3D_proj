<launch>
   <!--  TODO odom&imu;  融合gps 和slam  -->
   <arg name="prefix" default="robot_"/>
   <arg name="config_prefix" default=""/>

   <arg name="launch_pose_ekf" default="false"/>
   <arg name="localization_ekf_pose" default="true"/> 
   <arg name="use_gps" default="true"/> <!--gps（-odom） localization -->
   <!-- gps 融合到里程计 -->
   <arg name="gps_odom" default="true"/>
   <!-- gps融合slam -->
   <arg name="gps_world" default="true"/>
   <arg name="imuodom_pub_tf" default="false"/>
   <!-- <arg name="odom_filter_topic" default="odom_topic"/> -->
   
   <!-- laser -->
   <arg name="laser_raw_topic" default="front_laser/scan"/> 
   <arg name="laser_filtered_topic" default="laser_filter"/>
   <arg name="laser_box_frame" default="robot_front_laser_link"/>
   <!-- imu params -->
   <arg name="imu_raw_data" default="imu/data_raw" />
   <arg name="imu_raw_mag" default="mavros/imu/mag" />
   <arg name="imuFilter_fixed_frame" default="robot_imu_link" />
   <!-- odom（&imu） params -->
   <arg name="odom_raw_topic" default="odom" />
   <arg name="vins_out_odom" default="vins/odometry"/>
   <!-- <arg name="odom_raw_topic" default="robotnik_base_control/odom" /> -->
   <arg name="imuodom_topic_imu_in" default="imu/data"/>
   <arg name="imuodom_topic_pub" default="/imuodom_pub"/>

   <!-- gps odom params-->
   <arg name="gps_raw" default="gps/NavSatFix"/>
   <arg name="gpsodom_topic_imu_in" default="$(arg imuodom_topic_imu_in)"/>
   <arg name="gpsodom_topic_odom_in" default="$(arg imuodom_topic_pub)"/>
   <arg name="gpsodom_topic_gps_in" default="odometry/gps"/>
   <arg name="gpsodom_topic_pub" default="odometry/filtered_gpsodom"/>
   <arg name="wait_for_datum" default="false" /> <!-- if navsat must take the orientation from the imu or from the datum service -->
   <!-- gps world -->
   <arg name="gps_world_pub" default="odometry/filtered_gpsworld"/>
   <arg name="slam_odom_topic" default="slam_gmapping/odom"/>
   <!-- frame name -->
   <arg name="map_frame" default="map"/>
   <arg name="odom_frame" default="odom"/>
   <arg name="base_frame" default="base_link"/>
   <arg name="world_frame" default="world_frame"/> 
   <arg name="test_world_frame" default="world_frame"/> 

   <!-- <arg name="odom_frame" default="$(arg prefix)odom"/> 
   
   <arg name="base_frame" default="$(arg prefix)base_footprint"/> -->

   

    <!-- laser filter -->
   <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
      <rosparam command="load" file="$(find summit_xl_localization)/config_$(arg config_prefix)/laserfilter_params.yaml" subst_value="true"/>
      <remap from="scan" to="$(arg laser_raw_topic)" />
      <remap from="scan_filtered" to="$(arg laser_filtered_topic)" />
   </node>

  <!-- TODO imu 融合/滤波 -->
   <node pkg="imu_complementary_filter" type="complementary_filter_node" name="complementary_filter_node" output="screen">
      <remap from="imu/mag" to="$(arg imu_raw_mag)"/>
      <remap from="imu/data_raw" to="$(arg imu_raw_data)"/>
      <!-- <remap from="imu/data" to="/imu_data"/> -->
      <param name="fixed_frame" value="$(arg imuFilter_fixed_frame)"/>

      <param name="gain_acc" value="0.01"/>
      <param name="gain_mag" value="0.01"/>
      <param name="bias_alpha" value="0.01"/>
      <param name="do_bias_estimation" value="true"/>
      <param name="do_adaptive_gain" value="true"/>
      <param name="use_mag" value="false"/>
      <param name="publish_tf" value="false"/>
      <param name="reverse_tf" value="false"/>
      <param name="constant_dt" value="0.0"/>

      <param name="publish_debug_topics" value="true"/>
   </node>

   <!-- 1. imu_data & odom -->
   <!--发布 odom-baselink tf  -->
    L<node if="$(arg launch_pose_ekf)" pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf"> 
        <rosparam file="$(find summit_xl_localization)/config_$(arg config_prefix)/pose_ekf_params.yaml" command="load" subst_value="true"/>
        <!-- <remap from="imu_data" to="$(arg imuodom_topic_imu_in)"/> -->
        <remap from="imu_data" to="$(arg imu_raw_data)"/>  <!--TODO IMU融合/滤波-->
        <remap from="odom" to="$(arg odom_raw_topic)" />
        <!-- pub: robot_pose_ekf/odom_combined  TF-->
    </node> 

   
   <!-- 2. imu_data & odom  -->
      <!-- ekf_loc1 fuses only continuous data (imu and odometry). Publish the tf from odom_frame to base_footprint -->
    <node if="$(arg localization_ekf_pose)" pkg="robot_localization" type="ekf_localization_node" name="ekf_imu_odom" clear_params="true" output="screen" >      
      <!-- sub imu/data-->
      <param name="odom0" value="$(arg odom_raw_topic)"/> <!-- previously: /odom -->
      <param name="imu0" value="$(arg imu_raw_data)"/>        <!-- previously: /imu/data --> 
      <!-- <param name="imu0" value="$(arg imuodom_topic_imu_in)"/>    -->

      <!-- pub  -->
      <remap from="odometry/filtered" to="$(arg imuodom_topic_pub)" />
      <rosparam file="$(find summit_xl_localization)/config_$(arg config_prefix)/ekf_imu_odom_params.yaml" command="load" subst_value="true"/>
  </node>
   
  <!-- TODO if merge gps , 三个一起融合; 保留串级融合用于精度比较 -->
   <group if ="$(arg use_gps)">
      <node  pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true" output="screen">
         <remap from="imu/data" to="$(arg imu_raw_data)"/>    
         <remap from="odometry/filtered" to="$(arg gpsodom_topic_odom_in)"/>    
         <remap from="gps/fix" to="$(arg gps_raw)"/>   
         <!-- pub -->
         <remap from="odometry/gps" to="$(arg gpsodom_topic_gps_in)" /> 
         <rosparam command="load" file="$(find summit_xl_localization)/config_$(arg config_prefix)/navsat_transform_param.yaml" subst_value="true"/>
      </node> 
      <!-- GPS -->
      <node if ="$(arg gps_odom)"  pkg="robot_localization" type="ekf_localization_node" name="ekf_gps_odom" clear_params="true" output="screen">      
            <remap from="odometry/filtered" to="$(arg gpsodom_topic_pub)" />
            <rosparam file="$(find summit_xl_localization)/config_$(arg config_prefix)/gps_odom_ekf_params.yaml" command="load" subst_value="true"/>
      </node>
      <node if ="$(arg gps_world)"  pkg="robot_localization" type="ekf_localization_node" name="ekf_gps_world" clear_params="true" output="screen">      
            <remap from="odometry/filtered" to="$(arg gps_world_pub)" />
            <rosparam file="$(find summit_xl_localization)/config_$(arg config_prefix)/gps_world_ekf_params.yaml" command="load" subst_value="true"/>
      </node>
      

   </group>






  
</launch>
